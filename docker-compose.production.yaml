services:
  invoice:
    build:
      context: .
      dockerfile: ./apps/invoice/Dockerfile
      target: production
    restart: always
    env_file:
      - ./apps/invoice/.env
    ports:
      - "3000:3000"
    volumes:
      - invoice_volume:/usr/src/app

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: production
    restart: always
    env_file:
      - ./apps/auth/.env
    ports:
      - "3001:3001"
    volumes:
      - auth_volume:/usr/src/app

  payments:
    build:
      context: .
      dockerfile: ./apps/payments/Dockerfile
      target: production
    restart: always
    env_file:
      - ./apps/payments/.env
    volumes:
      - payments_volume:/usr/src/app

  notifications:
    build:
      context: .
      dockerfile: ./apps/notifications/Dockerfile
      target: production
    restart: always
    env_file:
      - ./apps/notifications/.env
    volumes:
      - notifications_volume:/usr/src/app

  cron:
    build:
      context: .
      dockerfile: ./apps/cron/Dockerfile
      target: production
    restart: always
    env_file:
      - ./apps/cron/.env
    volumes:
      - cron_volume:/usr/src/app

  mongo:
    image: mongo
    restart: always
    ports:
      - '27047:27017'
    volumes:
      - mongo-production-data:/data/db

  rabbitmq:
    image: rabbitmq
    ports:
      - '4672:5672'
      
volumes:
  invoice_volume:
  auth_volume:
  payments_volume:
  notifications_volume:
  mongo-production-data:
  cron_volume:
